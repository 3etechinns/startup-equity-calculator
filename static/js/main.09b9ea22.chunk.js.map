{"version":3,"sources":["chart.png","Grant.js","Cube.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","MonthPicker","DatePicker","Grant","value","this","props","handleUpdateAction","startDate","sharesGranted","exercisePrice","react_default","a","createElement","className","name","type","types","initial","initialGrantView","subsequentGrantView","key","defaultValue","placeholder","format","allowClear","onChange","handleStartDateChange","bind","htmlFor","input_number","id","formatter","App","formattedNumberFrom","min","max","sharesOutstanding","step","handleSharesGrantedChange","ownership","formattedLargeCurrencyFrom","handleExercisePriceChange","exerciseCost","tooltip","title","es_button","shape","icon","disabled","Component","subsequent","Cube","init","renderTick","state","speed","directions","forEach","axis","Math","abs","e","t","random","b","i","rotate","reduce","object","size","x","direction","concat","y","tint","distance","_this","darken","delta","ratio","alpha","_tint$color$map","color","map","index","round","interpolate","shading","_tint$color$map2","Object","slicedToArray","r","g","rotateX","_this2","_ref","sides","_setState","side","hidden","distanceFrom","shouldHideFrom","style","transform","rotationFrom","backgroundColor","shadingFrom","_this3","cube","sizes","s","left","top","m","toConsumableArray","cubeSides","children","bottom","right","back","values","forceUpdate","renderSidesWith","requestAnimationFrame","_this4","ref","component","cubeElement","cubeStyle","onClick","handleAction","shadowStyle","width","height","filter","opacity","xs","l","xl","RadioButton","Radio","Button","RadioGroup","Group","Option","Select","OptGroup","ButtonGroup","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","moment","startOf","currentFunding","liquidationDuration","liquidationValuation","replace","grantData","setState","scenarioId","benchmarkScenarios","randomLiquidationValuation","floor","liquidationValuationRange","randomLiquidationDuration","liquidationDurationRange","src_Grant_0","handleGrantUpdateAction","placement","handleSharesOutstandingChange","src_Cube_0","handleRandomEventAction","es_checkbox","defaultChecked","slider","marks","liquidationDurationSliderMarks","handleLiquidationDurationChange","handleLiquidationValuationChange","es_select","handleLiquidationScenarioChange","label","percentageVested","vestedShareValuation","preTaxGain","positiveGainView","negativeGainView","src","chart","alt","href","vestDuration","taxRate","taxCost","postTaxGain","1","textAlign","marginLeft","5","10","20","android","next","nest","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.09b9ea22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chart.a15fd715.png\";","import React, {Component} from 'react';\nimport './Grant.css';\n\nimport App from './App.js';\n\nimport DatePicker from 'antd/es/date-picker';\nimport 'antd/es/date-picker/style/css';\nimport InputNumber from 'antd/es/input-number';\nimport 'antd/es/input-number/style/css';\nimport Tooltip from 'antd/es/tooltip';\nimport 'antd/es/tooltip/style/css';\nimport Button from 'antd/es/button';\nimport 'antd/es/button/style/css';\n\nconst {MonthPicker} = DatePicker;\n\nclass Grant extends Component {\n    handleStartDateChange(value) {\n        this.props.handleUpdateAction({\n            startDate: value,\n            sharesGranted: this.props.sharesGranted,\n            exercisePrice: this.props.exercisePrice,\n        });\n    }\n\n    handleSharesGrantedChange(value) {\n        this.props.handleUpdateAction({\n            startDate: this.props.startDate,\n            sharesGranted: value,\n            exercisePrice: this.props.exercisePrice,\n        });\n    }\n\n    handleExercisePriceChange(value) {\n        this.props.handleUpdateAction({\n            startDate: this.props.startDate,\n            sharesGranted: this.props.sharesGranted,\n            exercisePrice: value,\n        });\n    }\n\n    get initialGrantView() {\n        return [\n            <div key=\"start-date\">\n                <label>Your job starts in</label>\n                <MonthPicker\n                    defaultValue={this.props.startDate}\n                    placeholder=\"Select month\"\n                    format=\"MMM YYYY\"\n                    allowClear={false}\n                    onChange={this.handleStartDateChange.bind(this)}\n                />\n            </div>,\n            <div key=\"options\">\n                <label htmlFor=\"shares-grant-1\">\n                    <span>You are given</span>\n                    <InputNumber\n                        id=\"shares-grant-1\"\n                        defaultValue={this.props.sharesGranted}\n                        formatter={App.formattedNumberFrom}\n                        min={1}\n                        max={this.props.sharesOutstanding}\n                        step={1000}\n                        onChange={this.handleSharesGrantedChange.bind(this)}\n                    />\n                    <span>stock options, for <span className=\"bold\">{this.props.ownership}%</span> of the startup,</span>\n                </label>\n            </div>,\n            <div key=\"exercise-price\">\n                <label htmlFor=\"exercise-price\">\n                    <span>which you can use to buy equity in your startup by paying</span>\n                    <InputNumber\n                        id=\"exercise-price\"\n                        defaultValue={this.props.exercisePrice}\n                        formatter={App.formattedLargeCurrencyFrom}\n                        min={0.01}\n                        step={0.01}\n                        onChange={this.handleExercisePriceChange.bind(this)}\n                    />\n                    <span>\n                        per share for a total of\n                        <span className=\"bold\"> {App.formattedLargeCurrencyFrom(this.props.exerciseCost)}</span>\n                        .\n                    </span>\n                </label>\n            </div>,\n        ];\n    }\n\n    get subsequentGrantView() {\n        return (\n            <div className=\"remove-grant\">\n                <Tooltip title=\"Remove this grant\">\n                    <Button type=\"primary\" shape=\"circle\" icon=\"close\" disabled />\n                </Tooltip>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <fieldset className=\"grant\">\n                <legend>{this.props.name}</legend>\n                {this.props.type === Grant.types.initial ?\n                    this.initialGrantView : this.subsequentGrantView}\n            </fieldset>\n        );\n    }\n}\n\nGrant.types = {\n    initial: \"initial\",\n    subsequent: \"subsequent\",\n};\n\nexport default Grant;\n","import React, {Component} from 'react';\nimport './Cube.css';\n\nclass Cube extends Component {\n    static get directions() {\n        return [\"x\", \"y\"];\n    }\n\n    static get sizes() {\n        return {\n            xs: 15,\n            s: 25,\n            m: 40,\n            l: 100,\n            xl: 120,\n        };\n    }\n\n    componentDidMount() {\n        this.init();\n        this.renderTick();\n    }\n\n    _setState(state, speed) {\n        Cube.directions.forEach(axis => {\n            state[axis] += speed[axis];\n            if (Math.abs(state[axis]) < 360) return;\n            const max = Math.max(state[axis], 360);\n            const min = max === 360 ? Math.abs(state[axis]) : 360;\n            state[axis] = max - min;\n        });\n    }\n\n    get cubeStyle() {\n        return this.cube && {\n            width: `${this.cube.size}px`,\n            height: `${this.cube.size}px`,\n        };\n    }\n\n    get shadowStyle() {\n        return this.cube && {\n            filter: `blur(${Math.round(this.cube.size * .4)}px)`,\n            opacity: Math.min(this.cube.size / 120, .4),\n        };\n    }\n\n    random(e, t) {\n        return Math.random() * (t - e) + e;\n    }\n\n    interpolate(a, b, i) {\n        return a * (1 - i) + b * i;\n    }\n\n    distanceFrom(state, rotate) {\n        return Cube.directions.reduce((object, axis) => {\n            object[axis] = Math.abs(state[axis] + rotate[axis]);\n            return object;\n        }, {});\n    }\n\n    rotationFrom(state, size, rotate) {\n        const axis = rotate.x ? \"Z\" : \"Y\";\n        const direction = rotate.x > 0 ? -1 : 1;\n\n        return `\n            rotateX(${state.x + rotate.x}deg)\n            rotate${axis}(${direction * (state.y + rotate.y)}deg)\n            translateZ(${size / 2}px)\n        `;\n    };\n\n    shadingFrom(tint, rotate, distance) {\n        const darken = Cube.directions.reduce((object, axis) => {\n            const delta = distance[axis];\n            const ratio = delta / 180;\n            object[axis] = delta > 180 ? Math.abs(2 - ratio) : ratio;\n            return object;\n        }, {});\n\n        if (rotate.x)\n            darken.y = 0;\n        else {\n            const {x} = distance;\n            if (x > 90 && x < 270)\n                Cube.directions.forEach(axis => darken[axis] = 1 - darken[axis]);\n        }\n\n        const alpha = (darken.x + darken.y) / 2;\n        const blend = (value, index) =>\n            Math.round(this.interpolate(value, tint.shading[index], alpha));\n\n        const [r, g, b] = tint.color.map(blend);\n        return `rgb(${r}, ${g}, ${b})`;\n    };\n\n    shouldHideFrom(rotateX, x, y) {\n        if (rotateX)\n            return x > 90 && x < 270;\n        if (x < 90)\n            return y > 90 && y < 270;\n        if (x < 270)\n            return y < 90;\n        return y > 90 && y < 270;\n    };\n\n    renderSidesWith({state, speed, size, tint, sides}) {\n        const animate = object => {\n            const {side, rotate, hidden} = object;\n            const distance = this.distanceFrom(state, rotate);\n\n            // don't animate hidden sides\n            if (this.shouldHideFrom(rotate.x, distance.x, distance.y)) {\n                if (!hidden) {\n                    side.hidden = true;\n                    object.hidden = true;\n                }\n                return;\n            }\n\n            if (hidden) {\n                side.hidden = false;\n                object.hidden = false;\n            }\n\n            side.style.transform = this.rotationFrom(state, size, rotate);\n            side.style.backgroundColor = this.shadingFrom(tint, rotate, distance);\n        };\n\n        this._setState(state, speed);\n        sides.forEach(animate);\n    };\n\n    init() {\n        this.cube = {\n            tint: {\n                color: [255, 255, 255],\n                shading: [133, 133, 133],\n            },\n            size: Cube.sizes.s,\n            left: 35,\n            top: 465,\n        };\n\n        const state = {\n            x: 0,\n            y: 0,\n        };\n\n        const speed = Cube.directions.reduce((object, axis) => {\n            const max = this.cube.size > Cube.sizes.m ? .3 : .6;\n            object[axis] = this.random(-max, max);\n            return object;\n        }, {});\n\n        const sides = [...this.cubeSides.children].reduce((object, side) => {\n            object[side.className] = {\n                side,\n                hidden: false,\n                rotate: {\n                    x: 0,\n                    y: 0,\n                },\n            };\n            return object;\n        }, {});\n\n        sides.top.rotate.x = 90;\n        sides.bottom.rotate.x = -90;\n        sides.left.rotate.y = -90;\n        sides.right.rotate.y = 90;\n        sides.back.rotate.y = -180;\n\n        // this.cube.domElement = this.cubeElement;\n        this.cube.state = state;\n        this.cube.speed = speed;\n        this.cube.sides = Object.values(sides);\n\n        this.forceUpdate();\n    }\n\n    renderTick() {\n        this.renderSidesWith(this.cube);\n        requestAnimationFrame(this.renderTick.bind(this));\n    };\n\n    render() {\n        return (\n            <div\n                className=\"cube\"\n                ref={(component) => this.cubeElement = component}\n                style={this.cubeStyle}\n                onClick={this.props.handleAction}\n            >\n                <div\n                    className=\"shadow\"\n                    style={this.shadowStyle}\n                />\n                <div className=\"sides\" ref={(component) => this.cubeSides = component}>\n                    <div className=\"back\">?</div>\n                    <div className=\"top\">?</div>\n                    <div className=\"left\">?</div>\n                    <div className=\"front\">?</div>\n                    <div className=\"right\">?</div>\n                    <div className=\"bottom\">?</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Cube;\n","import React, {Component} from 'react';\nimport './App.scss';\n\nimport Grant from './Grant';\nimport Dice from './Cube';\n\nimport moment from 'moment';\nimport Icon from 'antd/es/icon';\nimport InputNumber from 'antd/es/input-number';\nimport 'antd/es/input-number/style/css';\nimport Slider from 'antd/es/slider';\nimport 'antd/es/slider/style/css';\nimport Checkbox from 'antd/es/checkbox';\nimport 'antd/es/checkbox/style/css';\nimport Radio from 'antd/es/radio';\nimport 'antd/es/radio/style/css';\nimport Select from 'antd/es/select';\nimport 'antd/es/select/style/css';\nimport Tooltip from 'antd/es/tooltip';\nimport 'antd/es/tooltip/style/css';\nimport Button from 'antd/es/button';\nimport 'antd/es/button/style/css';\n\nimport chart from \"./chart.png\";\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\nconst {Option, OptGroup} = Select;\nconst ButtonGroup = Button.Group;\n\nclass App extends Component {\n    static formattedNumberFrom(value) {\n        return `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n    static formattedLargeCurrencyFrom(value) {\n        return `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            startDate: moment().startOf(\"month\"),\n            sharesGranted: 40000,\n            exercisePrice: 0.54,\n            sharesOutstanding: 60000000,\n            currentFunding: 10000000,\n            liquidationDuration: 72,\n            liquidationValuation: 100000000,\n        };\n    }\n\n    get exerciseCost() {\n        return Math.round(this.state.sharesGranted * this.state.exercisePrice);\n    }\n\n    get ownership() {\n        return Math.round(this.state.sharesGranted / this.state.sharesOutstanding * 100 * 1000)\n            / 1000;\n    }\n\n    get percentageVested() {\n        return (this.state.liquidationDuration > App.vestDuration ?\n            App.vestDuration : this.state.liquidationDuration) / App.vestDuration;\n    }\n\n    get vestedShareValuation() {\n        return Math.round(\n            this.state.liquidationValuation / this.state.sharesOutstanding *\n            (this.percentageVested * this.state.sharesGranted),\n        );\n    }\n\n    get taxCost() {\n        return Math.round(\n            (this.vestedShareValuation - this.exerciseCost) * App.taxRate,\n        );\n    }\n\n    get preTaxGain() {\n        return this.vestedShareValuation - this.exerciseCost;\n    }\n\n    get postTaxGain() {\n        return this.preTaxGain - this.taxCost;\n    }\n\n    get positiveGainView() {\n        return (\n            <p className=\"positive-gain-view\">\n                Congratulations, after paying\n                <span className=\"bold\"> {App.formattedLargeCurrencyFrom(this.exerciseCost)} </span>\n                to exercise your options and\n                <span className=\"bold\"> {App.formattedLargeCurrencyFrom(this.taxCost)} </span>\n                in taxes, you may be able to pocket\n                <span className=\"bold\"> {App.formattedLargeCurrencyFrom(this.postTaxGain)}</span>\n                , or\n                <span className=\"bold\"> {App.formattedLargeCurrencyFrom(Math.round(this.postTaxGain / (this.state.liquidationDuration / 12)))} </span>\n                per year of employment.*\n            </p>\n        );\n    }\n\n    get negativeGainView() {\n        return (\n            <p className=\"nagative-gain-view\">\n                Unfortunately, it may not worth spending\n                <span className=\"bold\"> {App.formattedLargeCurrencyFrom(this.exerciseCost)} </span>\n                <span>to exercise your options. But there are still </span>\n                <Tooltip title=\"There are many intangible benefits to joining a startup, such as working with cutting edge technology, being able to make a big impact on day 1...\">\n                    <span className=\"help\">many other reasons</span>\n                </Tooltip>\n                <span> to join this exciting startup journey.</span>\n            </p>\n        );\n    }\n\n    handleGrantUpdateAction(grantData) {\n        this.setState({\n            startDate: grantData.startDate,\n            sharesGranted: grantData.sharesGranted,\n            exercisePrice: grantData.exercisePrice,\n        });\n    }\n\n    handleSharesOutstandingChange(value) {\n        this.setState({sharesOutstanding: value});\n    }\n\n    handleLiquidationDurationChange(value) {\n        this.setState({liquidationDuration: value * 12});\n    }\n\n    handleLiquidationValuationChange(value) {\n        this.setState({liquidationValuation: value});\n    }\n\n    handleLiquidationScenarioChange(scenarioId) {\n        this.setState({\n            liquidationValuation: App.benchmarkScenarios[scenarioId].liquidationValuation,\n            liquidationDuration: App.benchmarkScenarios[scenarioId].liquidationDuration,\n        });\n    }\n\n    handleRandomEventAction() {\n        const randomLiquidationValuation = Math.floor(\n            Math.random() * App.liquidationValuationRange.max - App.liquidationValuationRange.min,\n        ) + App.liquidationValuationRange.min;\n        const randomLiquidationDuration = Math.floor(\n            Math.random() * App.liquidationDurationRange.max - App.liquidationDurationRange.min,\n        ) + App.liquidationDurationRange.min;\n        this.setState({\n            liquidationValuation: randomLiquidationValuation,\n            liquidationDuration: randomLiquidationDuration,\n        });\n    }\n\n    render() {\n        return [\n            <h1 key=\"title\">Startup Equity Calculator</h1>,\n            <section key=\"offer\" className=\"offer\">\n                <h2>You were granted</h2>\n                <div className=\"row\">\n                    <Grant\n                        startDate={this.state.startDate}\n                        sharesGranted={this.state.sharesGranted}\n                        exercisePrice={this.state.exercisePrice}\n                        sharesOutstanding={this.state.sharesOutstanding}\n                        ownership={this.ownership}\n                        exerciseCost={this.exerciseCost}\n                        handleUpdateAction={this.handleGrantUpdateAction.bind(this)}\n                        name=\"Initial Grant\"\n                        type={Grant.types.initial}\n                    />\n                    <Grant\n                        name=\"Grant #2\"\n                        type={Grant.types.subsequent}\n                    />\n                    <div className=\"add-grant\">\n                        <Tooltip title=\"Add a refresher grant\" placement=\"right\">\n                            <Button type=\"primary\" shape=\"circle\" icon=\"plus\" disabled />\n                        </Tooltip>\n                    </div>\n                </div>\n                <div>\n                    Not sure if <span className=\"bold\">{this.ownership}%</span> is too little or\n                    too much? Jump to the last section to learn more.\n                </div>\n            </section>,\n            <section key=\"company\" className=\"company\">\n                <h2>What you know about the startup</h2>\n                <fieldset>\n                    <div>\n                        <label htmlFor=\"shares-outstanding\">Number of outstanding shares</label>\n                        <InputNumber\n                            id=\"shares-outstanding\"\n                            defaultValue={this.state.sharesOutstanding}\n                            formatter={App.formattedNumberFrom}\n                            min={this.state.sharesGranted}\n                            step={1000000}\n                            onChange={this.handleSharesOutstandingChange.bind(this)}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"funding-current\">Current funding</label>\n                        <InputNumber\n                            id=\"funding-current\"\n                            defaultValue={this.state.currentFunding}\n                            formatter={App.formattedLargeCurrencyFrom}\n                            min={0}\n                            step={100000}\n                            onChange={this.onChange}\n                            disabled\n                        />\n                    </div>\n                    <div>\n                        <Tooltip title=\"Without knowing the total number of shares outstanding, we cannot quantify the value of your stock options. You may want to ask your HR representative in this way...\">\n                            <span className=\"help\">Don't know or can't get this info?</span>\n                        </Tooltip>\n                    </div>\n                </fieldset>\n            </section>,\n            <section key=\"events\" className=\"events\">\n                <h2>\n                    If these things were to happen\n                    <Dice handleAction={this.handleRandomEventAction.bind(this)} />\n                </h2>\n                <fieldset>\n                    <div className=\"liquidation-duration\">\n                        <Checkbox defaultChecked={true}>\n                            <span>There is a </span>\n                            <Tooltip title=\"A liquidation event can be an IPO, a share repurchase program...\">\n                                <span className=\"help\">liquidation event</span>\n                            </Tooltip>\n                            <span> in</span>\n                        </Checkbox>\n                        <Slider\n                            marks={App.liquidationDurationSliderMarks}\n                            defaultValue={this.state.liquidationDuration / 12}\n                            value={this.state.liquidationDuration / 12}\n                            min={App.liquidationDurationRange.min / 12}\n                            max={App.liquidationDurationRange.max / 12}\n                            step={0.5}\n                            onChange={this.handleLiquidationDurationChange.bind(this)}\n                        />\n                    </div>\n                    <div className=\"liquidation-valuation\">\n                        <label htmlFor=\"liquidation-valuation\">\n                            <span>at</span>\n                            <InputNumber\n                                id=\"liquidation-valuation\"\n                                defaultValue={this.state.liquidationValuation}\n                                value={this.state.liquidationValuation}\n                                formatter={App.formattedLargeCurrencyFrom}\n                                min={0}\n                                step={1000000}\n                                onChange={this.handleLiquidationValuationChange.bind(this)}\n                            />\n                            <span>valuation</span>\n                        </label>\n                        <div>\n                            <span>(Don't know? Reference </span>\n                            <Select\n                                placeholder=\"a previous exit\"\n                                onChange={this.handleLiquidationScenarioChange.bind(this)}\n                            >\n                                <OptGroup label=\"Small\">\n                                    <Option value=\"android\">Android $50M</Option>\n                                </OptGroup>\n                                <OptGroup label=\"Medium\">\n                                    <Option value=\"next\">NeXT $435M</Option>\n                                </OptGroup>\n                                <OptGroup label=\"Large\">\n                                    <Option value=\"nest\">Nest $3.2B</Option>\n                                </OptGroup>\n                            </Select>\n                            <span>, click the dice to randomize, or </span>\n                            <Tooltip title=\"409A valuation, tips and tricks on how to guesstimate, etc....\">\n                                <span className=\"help\">read more about startup valuations</span>\n                            </Tooltip>\n                            )\n                        </div>\n                    </div>\n                    <div className=\"liquidation-stay\">\n                        <span>And you</span>\n                        <RadioGroup defaultValue=\"a\">\n                            <RadioButton value=\"a\">Stay {Math.round(this.state.liquidationDuration / 12 * 10) / 10} years until liquidation</RadioButton>\n                            <RadioButton value=\"b\" disabled>Leave early</RadioButton>\n                        </RadioGroup>\n                        <p>\n                            Your options would be\n                            <span className=\"bold\"> {Math.round(this.percentageVested * 100)}% </span>\n                            <span>vested. </span>\n                            <Tooltip title=\"In some cases, you may accelorate your vesting to 100% upon a liquidation event, or be granted more options\">\n                                <Icon type=\"question-circle-o\" />\n                            </Tooltip>\n                        </p>\n                    </div>\n                </fieldset>\n            </section>,\n            <section key=\"valuation\" className=\"valuation\">\n                <h2>Your options may be worth</h2>\n                <div className=\"options-valuation\">\n                    <p>\n                        Your vested options may be worth\n                        <span className=\"bold\"> {App.formattedLargeCurrencyFrom(this.vestedShareValuation)}</span>\n                        .*\n                    </p>\n                    {this.preTaxGain > 0 ? this.positiveGainView : this.negativeGainView}\n                    <div>\n                        <Tooltip title=\"Many factors can impact your stock option valuation, such as liquidation preferences...\">\n                            <span className=\"help\">* Why maybe?</span>\n                        </Tooltip>\n                    </div>\n                </div>\n                <br />\n                <div className=\"total-compensation\">\n                    <h3>What does this mean for me?</h3>\n                    <div className=\"row\">\n                        <div className=\"left\">\n                            <p>\n                                Startup equity valuation is not an exact science.\n                                You should always view it as part of your total compensation,\n                                and think about what matters most to you,\n                                depending on your personal goals, your life stage, etc.\n                            </p>\n                            <ul>\n                                <li>Base salary...</li>\n                                <li>Annual bonus...</li>\n                                <li>Perks...</li>\n                                <li>Intangibles...</li>\n                            </ul>\n                        </div>\n                        <div className=\"right\">\n                            <img id=\"total-compensation-chart\" src={chart} alt=\"Total Compensation Chart\" />\n                        </div>\n                    </div>\n                </div>\n            </section>,\n            <section key=\"next\" className=\"next\">\n                <h2>What's next?</h2>\n                <div>\n                    <Button type=\"primary\" icon=\"share-alt\" disabled>Share</Button> your analysis\n                    with yourself or with someone else for advice\n                </div>\n                <br />\n                <p>\n                    Read our <a>in-depth guide</a> and watch our <a>mini-course on startup equity</a>\n                </p>\n                <div>\n                    Did we help you with your decision?\n                    <ButtonGroup>\n                        <Button type=\"primary\" icon=\"like\" disabled />\n                        <Button type=\"primary\" icon=\"dislike\" disabled />\n                    </ButtonGroup>\n                </div>\n                <p>Made with ❤️ by <a href=\"https://shan.io\">Ray Shan</a></p>\n            </section>,\n        ];\n    }\n}\n\nApp.liquidationDurationSliderMarks = {\n    1: {\n        style: {textAlign: \"left\", marginLeft: 0},\n        label: \"1 year\",\n    },\n    5: \"5\",\n    10: \"10\",\n    20: {\n        style: {textAlign: \"right\", left: \"auto\", right: 0},\n        label: \"20 years\",\n    },\n};\n\nApp.benchmarkScenarios = {\n    android: {\n        liquidationValuation: 50000000,\n        liquidationDuration: 24,\n    },\n    next: {\n        liquidationValuation: 435000000,\n        liquidationDuration: 132,\n    },\n    nest: {\n        liquidationValuation: 3200000000,\n        liquidationDuration: 48,\n    },\n};\n\nApp.vestDuration = 48;\nApp.taxRate = 0.4;\nApp.liquidationValuationRange = {\n    min: 1000000,\n    max: 10000000000,\n};\nApp.liquidationDurationRange = {\n    min: 12,\n    max: 240,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}